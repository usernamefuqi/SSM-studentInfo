<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crud.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.crud.bean.Teacher">
    <id column="Tid" jdbcType="CHAR" property="tid" />
    <result column="Tname" jdbcType="VARCHAR" property="tname" />
    <result column="Tpassword" jdbcType="VARCHAR" property="tpassword" />
    <result column="Tsex" jdbcType="VARCHAR" property="tsex" />
    <result column="Introduction" jdbcType="VARCHAR" property="introduction" />
  </resultMap>
  <!-- 根据教师编号删除教师信息 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher
    where Tid = #{tid,jdbcType=CHAR}
  </delete>
  <!-- 添加教师信息 -->
  <insert id="insert" parameterType="com.atguigu.crud.bean.Teacher">
    insert into teacher (Tid, Tname, Tpassword, 
      Tsex, Introduction)
    values (#{tid,jdbcType=CHAR}, #{tname,jdbcType=VARCHAR}, #{tpassword,jdbcType=VARCHAR}, 
      #{tsex,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR})
  </insert>
  <!-- 根据教师编号修改教师信息 -->
  <update id="updateByPrimaryKey" parameterType="com.atguigu.crud.bean.Teacher">
    update teacher
    set Tname = #{tname,jdbcType=VARCHAR},
      Tpassword = #{tpassword,jdbcType=VARCHAR},
      Tsex = #{tsex,jdbcType=VARCHAR},
      Introduction = #{introduction,jdbcType=VARCHAR}
    where Tid = #{tid,jdbcType=CHAR}
  </update>
  <!-- 根据教师编号查询出教师实体 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select Tid, Tname, Tpassword, Tsex, Introduction
    from teacher
    where Tid = #{tid,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select Tid, Tname, Tpassword, Tsex, Introduction
    from teacher
  </select>
  <!-- 修改教师密码 -->
  <update id="modifyTeacherPwd">
		update teacher set tpassword=#{tpassword} where tid =#{tid}
	</update>


  <!-- 教师登录设置 -->
  <select id="queryByNamePwd" resultType="java.lang.String">
		select * from teacher where tid = #{tid} and tpassword= #{tpassword}
	</select>

  <!-- 查询全部教师 -->
  <select id="selectTeacherBySql" parameterType="map" resultMap="BaseResultMap">
    select * from teacher <!-- limit #{pageNo} , #{pageSize} -->
  </select>

  <!-- 根据教师编号查询学生信息 -->
  <select id="getByTeacherTid" parameterType="map" resultMap="BaseResultMap">
    select * from teacher where tid = #{tid} <!-- limit #{pageNo} , #{pageSize} -->
  </select>

  <!-- ajax验证教师编号是否存在 -->
  <select id="ajaxQueryByTid" resultType="java.lang.String">
		select tid from teacher where tid = #{tid}
	</select>
</mapper>